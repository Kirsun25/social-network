<?php
/**
 * Created by PhpStorm.
 * User: max
 * Date: 29.03.18
 * Time: 18:34
 */

namespace app\models;
use yii\db\ActiveRecord;
use yii\web\IdentityInterface;

class Users extends ActiveRecord implements IdentityInterface {


    public static function tableName()
    {
        return 'users'; // TODO: Change the autogenerated stub
    }
    public function attributeLabels()
    {
        return [

        ];
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
    }

    /**
     * Finds an identity by the given token.
     *
     * @param string $token the token to be looked for
     * @return IdentityInterface|null the identity object that matches the given token.
     */
    public static function findIdentityByAccessToken($token, $type = null)
    {
        return static::findOne(['access_token' => $token]);
    }

    /**
     * @return int|string current user ID
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return string current user auth key
     */
    public function getAuthKey()
    {
        return $this->auth_key;
    }
    public  static function findByUsername($username){
        return static::findOne(['login'=>$username]);
    }

    /**
     * @param string $authKey
     * @return bool if auth key is valid for current user
     */
    public function validateAuthKey($authKey)
    {
        return $this->auth_key === $authKey;
    }
    public function validatePassword($pass){
        return \Yii::$app->security->validatePassword($pass, $this->pass);
    }
    public function generateAuthKey()
    {
        $this->auth_key = \Yii::$app->security->generateRandomString();
    }

    public function getMessages(){
        return $this->hasMany(Messages::class, ['dialog_id' => 'dialog_id'])->viaTable('dialogs-users', ['user_id'=>'id']);
    }
}